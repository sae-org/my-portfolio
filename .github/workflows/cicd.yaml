name: Deploy Docker Image to ECR and then run ansible playbook.

on: 
  push: 
    branches: [ main ]

permissions:
  id-token: write    # Required for OIDC
  contents: read
  
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
      ROLE_ARN: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/gha-my-portfolio-iam-role 

    steps: 
    - name: Check out code 
      uses: actions/checkout@v3

    - name: Configure AWS credentials (OIDC)
      uses: aws-actions/configure-aws-credentials@v4
      with: 
        role-to-assume: ${{ env.ROLE_ARN }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build & push Docker Image
      env:
        REGISTRY: ${{ steps.ecr.outputs.registry }}
        REPOSITORY: my-portfolio-dev-ecr-repo                    
        IMAGE_TAG: ${{ github.sha }} 
      run: | 
        docker buildx create --use 
        docker buildx build --platform linux/amd64,linux/arm64 \
        -t $REGISTRY/$REPOSITORY:$IMAGE_TAG \
        -t "$REGISTRY/$REPOSITORY:dev" \
        --push .

    # Retrieve controller connection details from Secrets Manager
    - name: Fetch Ansible connection info
      id: fetch
      run: |
        CONTROLLER_HOST=$(aws secretsmanager get-secret-value \
          --secret-id ansible/controller/host \
          --query SecretString --output text)
        CONTROLLER_USER=$(aws secretsmanager get-secret-value \
          --secret-id ansible/controller/user \
          --query SecretString --output text)
        CONTROLLER_KEY=$(aws secretsmanager get-secret-value \
          --secret-id ansible/controller/ssh_key_priv \
          --query SecretString --output text)

        printf '%s' "$CONTROLLER_KEY" > controller.pem
        chmod 600 controller.pem

        echo "CONTROLLER_HOST=$CONTROLLER_HOST" >> $GITHUB_ENV
        echo "CONTROLLER_USER=$CONTROLLER_USER" >> $GITHUB_ENV

    # Run playbook remotely
    - name: Run Ansible Playbook on controller
      run: |
        ssh -i controller.pem -o StrictHostKeyChecking=no "$CONTROLLER_USER@$CONTROLLER_HOST" "
          cd ~/ansible
          ansible-playbook -i inventory/my-portfolio.aws_ec2.yml playbooks/my-portfolio.yml \
            -e image_tag=${{ github.sha }} \
            -e @group_vars/all/vault.yml \
            --vault-password-file ~/ansible/secrets_script.sh
        "