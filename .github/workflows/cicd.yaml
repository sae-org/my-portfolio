name: Deploy Docker Image to ECR and then run ansible playbook after 

on: 
  push: 
    branches: [ main ]
  
jobs: 
  build: 
    name: Build Image 
    runs-on: ubuntu-latest

    steps: 
    - name: Check out code 
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with: 
        aws-region: us-east-1
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Login to Amazon ECR
      id: ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build & push (tag with commit SHA + dev (for user data in asg purpose) )
      env:
        REGISTRY: ${{ steps.ecr.outputs.registry }}
        REPOSITORY: my-dev-ecr-repo-1                     
        IMAGE_TAG: ${{ github.sha }} 
      run: | 
        docker buildx create --use 
        docker buildx build --platform linux/amd64,linux/arm64 \
        -t $REGISTRY/$REPOSITORY:$IMAGE_TAG \
        -t "$REGISTRY/$REPOSITORY:dev" \
        --push .

    - name: Start ssh-agent 
      uses: webfactory/ssh-agent@v0.9.0 
      with: 
        ssh-private-key: ${{ secrets.ANSIBLE_SSH_PRIVATE_KEY }}

    - name: Trust server host key 
      run: | 
        mkdir -p ~/.ssh 
        ssh-keyscan -H "${{ secrets.ANSIBLE_HOST }}" >> ~/.ssh/known_hosts

    - name: Run Ansible Playbook
      env:
        IMAGE_TAG: ${{ github.sha }}
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        ANS_VAULT_PASS: ${{ secrets.ANSIBLE_VAULT_PASS }}
      shell: bash
      run: |
        ssh -o StrictHostKeyChecking=no "${{ secrets.EC2_USER }}@${{ secrets.ANSIBLE_HOST }}" "
          set -e 
          export ANS_VAULT_PASS='${ANS_VAULT_PASS}'
          cd ~/ansible

          ansible-playbook playbooks/deploy.yml \
          -e @group_vars/all/vault.yml \
          --vault-password-file <(printf '%s' "$ANS_VAULT_PASS")
        "